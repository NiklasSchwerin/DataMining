#Ingolstadt
predictAway <- predict(model, data.frame(GoalsAway=0, Home="Bayern München", Away="Hamburger SV"), type="response")
print(predictAway)
#simulation with 10.000 possible results based on the probabilities
set.seed(915706074)
nsim <- 10000
homeGoalsSim <- rpois(nsim, predictHome)
awayGoalsSim <- rpois(nsim, predictAway)
goalDiffSim <- homeGoalsSim - awayGoalsSim
#Home
homeprob <- sum(goalDiffSim > 0) / nsim
print(homeprob)
#Draw
drawprob <- sum(goalDiffSim == 0) / nsim
print(drawprob)
#Away
awayprob <- sum(goalDiffSim < 0) / nsim
print(awayprob)
}
{
#load data
buli <- read.csv("C:\\Users\\nikla\\Documents\\DAMI Project\\RapidMiner Processes\\Comparison ML and Statistical\\buli.csv", header=TRUE)
#fit poisson model and get a summary
model <- glm(GoalsHome ~ GoalsAway + Home + Away, family=poisson(link=log), data=buli)
print(summary(model))
#probabilites of average goals scored
#Leverkusen
predictHome <- predict(model, data.frame(GoalsAway=1, Home="1. FSV Mainz 05", Away="Bayer 04 Leverkusen"), type="response")
print(predictHome)
#Ingolstadt
predictAway <- predict(model, data.frame(GoalsAway=0, Home="Bayer 04 Leverkusen", Away="1. FSV Mainz 05"), type="response")
print(predictAway)
#simulation with 10.000 possible results based on the probabilities
set.seed(915706074)
nsim <- 10000
homeGoalsSim <- rpois(nsim, predictHome)
awayGoalsSim <- rpois(nsim, predictAway)
goalDiffSim <- homeGoalsSim - awayGoalsSim
#Home
homeprob <- sum(goalDiffSim > 0) / nsim
print(homeprob)
#Draw
drawprob <- sum(goalDiffSim == 0) / nsim
print(drawprob)
#Away
awayprob <- sum(goalDiffSim < 0) / nsim
print(awayprob)
}
{
#load data
buli <- read.csv("C:\\Users\\nikla\\Documents\\DAMI Project\\RapidMiner Processes\\Comparison ML and Statistical\\buli.csv", header=TRUE)
#fit poisson model and get a summary
model <- glm(GoalsHome ~ GoalsAway + Home + Away, family=poisson(link=log), data=buli)
print(summary(model))
#probabilites of average goals scored
#Leverkusen
predictHome <- predict(model, data.frame(GoalsAway=1, Home="FC Augsburg", Away="SV Darmstadt 98"), type="response")
print(predictHome)
#Ingolstadt
predictAway <- predict(model, data.frame(GoalsAway=0, Home="SV Darmstadt 98", Away="FC Augsburg"), type="response")
print(predictAway)
#simulation with 10.000 possible results based on the probabilities
set.seed(915706074)
nsim <- 10000
homeGoalsSim <- rpois(nsim, predictHome)
awayGoalsSim <- rpois(nsim, predictAway)
goalDiffSim <- homeGoalsSim - awayGoalsSim
#Home
homeprob <- sum(goalDiffSim > 0) / nsim
print(homeprob)
#Draw
drawprob <- sum(goalDiffSim == 0) / nsim
print(drawprob)
#Away
awayprob <- sum(goalDiffSim < 0) / nsim
print(awayprob)
}
{
#load data
buli <- read.csv("C:\\Users\\nikla\\Documents\\DAMI Project\\RapidMiner Processes\\Comparison ML and Statistical\\buli.csv", header=TRUE)
#fit poisson model and get a summary
model <- glm(GoalsHome ~ GoalsAway + Home + Away, family=poisson(link=log), data=buli)
print(summary(model))
#probabilites of average goals scored
#Leverkusen
predictHome <- predict(model, data.frame(GoalsAway=1, Home="Eintracht Frankfurt", Away="Hertha BSC"), type="response")
print(predictHome)
#Ingolstadt
predictAway <- predict(model, data.frame(GoalsAway=0, Home="Hertha BSC", Away="Eintracht Frankfurt"), type="response")
print(predictAway)
#simulation with 10.000 possible results based on the probabilities
set.seed(915706074)
nsim <- 10000
homeGoalsSim <- rpois(nsim, predictHome)
awayGoalsSim <- rpois(nsim, predictAway)
goalDiffSim <- homeGoalsSim - awayGoalsSim
#Home
homeprob <- sum(goalDiffSim > 0) / nsim
print(homeprob)
#Draw
drawprob <- sum(goalDiffSim == 0) / nsim
print(drawprob)
#Away
awayprob <- sum(goalDiffSim < 0) / nsim
print(awayprob)
}
{
#load data
buli <- read.csv("C:\\Users\\nikla\\Documents\\DAMI Project\\RapidMiner Processes\\Comparison ML and Statistical\\buli.csv", header=TRUE)
#fit poisson model and get a summary
model <- glm(GoalsHome ~ GoalsAway + Home + Away, family=poisson(link=log), data=buli)
print(summary(model))
#probabilites of average goals scored
#Leverkusen
predictHome <- predict(model, data.frame(GoalsAway=1, Home="Werder Bremen", Away="VfL Wolfsburg"), type="response")
print(predictHome)
#Ingolstadt
predictAway <- predict(model, data.frame(GoalsAway=0, Home="VfL Wolfsburg", Away="Werder Bremen"), type="response")
print(predictAway)
#simulation with 10.000 possible results based on the probabilities
set.seed(915706074)
nsim <- 10000
homeGoalsSim <- rpois(nsim, predictHome)
awayGoalsSim <- rpois(nsim, predictAway)
goalDiffSim <- homeGoalsSim - awayGoalsSim
#Home
homeprob <- sum(goalDiffSim > 0) / nsim
print(homeprob)
#Draw
drawprob <- sum(goalDiffSim == 0) / nsim
print(drawprob)
#Away
awayprob <- sum(goalDiffSim < 0) / nsim
print(awayprob)
}
{
#load data
buli <- read.csv("C:\\Users\\nikla\\Documents\\DAMI Project\\RapidMiner Processes\\Comparison ML and Statistical\\buli.csv", header=TRUE)
#fit poisson model and get a summary
model <- glm(GoalsHome ~ GoalsAway + Home + Away, family=poisson(link=log), data=buli)
print(summary(model))
#probabilites of average goals scored
#Leverkusen
predictHome <- predict(model, data.frame(GoalsAway=1, Home="TSG 1899 Hoffenheim", Away="FC Schalke 04"), type="response")
print(predictHome)
#Ingolstadt
predictAway <- predict(model, data.frame(GoalsAway=0, Home="FC Schalke 04", Away="TSG 1899 Hoffenheim"), type="response")
print(predictAway)
#simulation with 10.000 possible results based on the probabilities
set.seed(915706074)
nsim <- 10000
homeGoalsSim <- rpois(nsim, predictHome)
awayGoalsSim <- rpois(nsim, predictAway)
goalDiffSim <- homeGoalsSim - awayGoalsSim
#Home
homeprob <- sum(goalDiffSim > 0) / nsim
print(homeprob)
#Draw
drawprob <- sum(goalDiffSim == 0) / nsim
print(drawprob)
#Away
awayprob <- sum(goalDiffSim < 0) / nsim
print(awayprob)
}
{
#load data
buli <- read.csv("C:\\Users\\nikla\\Documents\\DAMI Project\\RapidMiner Processes\\Comparison ML and Statistical\\buli.csv", header=TRUE)
#fit poisson model and get a summary
model <- glm(GoalsHome ~ GoalsAway + Home + Away, family=poisson(link=log), data=buli)
print(summary(model))
#probabilites of average goals scored
#Leverkusen
predictHome <- predict(model, data.frame(GoalsAway=1, Home="1. FC Köln", Away="RB Leipzig"), type="response")
print(predictHome)
#Ingolstadt
predictAway <- predict(model, data.frame(GoalsAway=0, Home="RB Leipzig", Away="1. FC Köln"), type="response")
print(predictAway)
#simulation with 10.000 possible results based on the probabilities
set.seed(915706074)
nsim <- 10000
homeGoalsSim <- rpois(nsim, predictHome)
awayGoalsSim <- rpois(nsim, predictAway)
goalDiffSim <- homeGoalsSim - awayGoalsSim
#Home
homeprob <- sum(goalDiffSim > 0) / nsim
print(homeprob)
#Draw
drawprob <- sum(goalDiffSim == 0) / nsim
print(drawprob)
#Away
awayprob <- sum(goalDiffSim < 0) / nsim
print(awayprob)
}
{
#load data
buli <- read.csv("C:\\Users\\nikla\\Documents\\DAMI Project\\RapidMiner Processes\\Comparison ML and Statistical\\buli.csv", header=TRUE)
#fit poisson model and get a summary
model <- glm(GoalsHome ~ GoalsAway + Home + Away, family=poisson(link=log), data=buli)
print(summary(model))
#probabilites of average goals scored
#Leverkusen
predictHome <- predict(model, data.frame(GoalsAway=1, Home="RB Leipzig", Away="FC Augsburg"), type="response")
print(predictHome)
#Ingolstadt
predictAway <- predict(model, data.frame(GoalsAway=0, Home="FC Augsburg", Away="RB Leipzig"), type="response")
print(predictAway)
#simulation with 10.000 possible results based on the probabilities
set.seed(915706074)
nsim <- 10000
homeGoalsSim <- rpois(nsim, predictHome)
awayGoalsSim <- rpois(nsim, predictAway)
goalDiffSim <- homeGoalsSim - awayGoalsSim
#Home
homeprob <- sum(goalDiffSim > 0) / nsim
print(homeprob)
#Draw
drawprob <- sum(goalDiffSim == 0) / nsim
print(drawprob)
#Away
awayprob <- sum(goalDiffSim < 0) / nsim
print(awayprob)
}
{
#load data
buli <- read.csv("C:\\Users\\nikla\\Documents\\DAMI Project\\RapidMiner Processes\\Comparison ML and Statistical\\buli.csv", header=TRUE)
#fit poisson model and get a summary
model <- glm(GoalsHome ~ GoalsAway + Home + Away, family=poisson(link=log), data=buli)
print(summary(model))
#probabilites of average goals scored
#Leverkusen
predictHome <- predict(model, data.frame(GoalsAway=1, Home="Bayern München", Away="1. FC Köln"), type="response")
print(predictHome)
#Ingolstadt
predictAway <- predict(model, data.frame(GoalsAway=0, Home="1. FC Köln", Away="Bayern München"), type="response")
print(predictAway)
#simulation with 10.000 possible results based on the probabilities
set.seed(915706074)
nsim <- 10000
homeGoalsSim <- rpois(nsim, predictHome)
awayGoalsSim <- rpois(nsim, predictAway)
goalDiffSim <- homeGoalsSim - awayGoalsSim
#Home
homeprob <- sum(goalDiffSim > 0) / nsim
print(homeprob)
#Draw
drawprob <- sum(goalDiffSim == 0) / nsim
print(drawprob)
#Away
awayprob <- sum(goalDiffSim < 0) / nsim
print(awayprob)
}
{
#load data
buli <- read.csv("C:\\Users\\nikla\\Documents\\DAMI Project\\RapidMiner Processes\\Comparison ML and Statistical\\buli.csv", header=TRUE)
#fit poisson model and get a summary
model <- glm(GoalsHome ~ GoalsAway + Home + Away, family=poisson(link=log), data=buli)
print(summary(model))
#probabilites of average goals scored
#Leverkusen
predictHome <- predict(model, data.frame(GoalsAway=1, Home="Hertha BSC", Away="Hamburger SV"), type="response")
print(predictHome)
#Ingolstadt
predictAway <- predict(model, data.frame(GoalsAway=0, Home="Hamburger SV", Away="Hertha BSC"), type="response")
print(predictAway)
#simulation with 10.000 possible results based on the probabilities
set.seed(915706074)
nsim <- 10000
homeGoalsSim <- rpois(nsim, predictHome)
awayGoalsSim <- rpois(nsim, predictAway)
goalDiffSim <- homeGoalsSim - awayGoalsSim
#Home
homeprob <- sum(goalDiffSim > 0) / nsim
print(homeprob)
#Draw
drawprob <- sum(goalDiffSim == 0) / nsim
print(drawprob)
#Away
awayprob <- sum(goalDiffSim < 0) / nsim
print(awayprob)
}
{
#load data
buli <- read.csv("C:\\Users\\nikla\\Documents\\DAMI Project\\RapidMiner Processes\\Comparison ML and Statistical\\buli.csv", header=TRUE)
#fit poisson model and get a summary
model <- glm(GoalsHome ~ GoalsAway + Home + Away, family=poisson(link=log), data=buli)
print(summary(model))
#probabilites of average goals scored
#Leverkusen
predictHome <- predict(model, data.frame(GoalsAway=1, Home="SV Darmstadt 98", Away="Werder Bremen"), type="response")
print(predictHome)
#Ingolstadt
predictAway <- predict(model, data.frame(GoalsAway=0, Home="Werder Bremen", Away="SV Darmstadt 98"), type="response")
print(predictAway)
#simulation with 10.000 possible results based on the probabilities
set.seed(915706074)
nsim <- 10000
homeGoalsSim <- rpois(nsim, predictHome)
awayGoalsSim <- rpois(nsim, predictAway)
goalDiffSim <- homeGoalsSim - awayGoalsSim
#Home
homeprob <- sum(goalDiffSim > 0) / nsim
print(homeprob)
#Draw
drawprob <- sum(goalDiffSim == 0) / nsim
print(drawprob)
#Away
awayprob <- sum(goalDiffSim < 0) / nsim
print(awayprob)
}
{
#load data
buli <- read.csv("C:\\Users\\nikla\\Documents\\DAMI Project\\RapidMiner Processes\\Comparison ML and Statistical\\buli.csv", header=TRUE)
#fit poisson model and get a summary
model <- glm(GoalsHome ~ GoalsAway + Home + Away, family=poisson(link=log), data=buli)
print(summary(model))
#probabilites of average goals scored
#Leverkusen
predictHome <- predict(model, data.frame(GoalsAway=1, Home="SC Freiburg", Away="Eintracht Frankfurt"), type="response")
print(predictHome)
#Ingolstadt
predictAway <- predict(model, data.frame(GoalsAway=0, Home="Eintracht Frankfurt", Away="SC Freiburg"), type="response")
print(predictAway)
#simulation with 10.000 possible results based on the probabilities
set.seed(915706074)
nsim <- 10000
homeGoalsSim <- rpois(nsim, predictHome)
awayGoalsSim <- rpois(nsim, predictAway)
goalDiffSim <- homeGoalsSim - awayGoalsSim
#Home
homeprob <- sum(goalDiffSim > 0) / nsim
print(homeprob)
#Draw
drawprob <- sum(goalDiffSim == 0) / nsim
print(drawprob)
#Away
awayprob <- sum(goalDiffSim < 0) / nsim
print(awayprob)
}
{
#load data
buli <- read.csv("C:\\Users\\nikla\\Documents\\DAMI Project\\RapidMiner Processes\\Comparison ML and Statistical\\buli.csv", header=TRUE)
#fit poisson model and get a summary
model <- glm(GoalsHome ~ GoalsAway + Home + Away, family=poisson(link=log), data=buli)
print(summary(model))
#probabilites of average goals scored
#Leverkusen
predictHome <- predict(model, data.frame(GoalsAway=1, Home="FC Ingolstadt 04", Away="TSG 1899 Hoffenheim"), type="response")
print(predictHome)
#Ingolstadt
predictAway <- predict(model, data.frame(GoalsAway=0, Home="TSG 1899 Hoffenheim", Away="FC Ingolstadt 04"), type="response")
print(predictAway)
#simulation with 10.000 possible results based on the probabilities
set.seed(915706074)
nsim <- 10000
homeGoalsSim <- rpois(nsim, predictHome)
awayGoalsSim <- rpois(nsim, predictAway)
goalDiffSim <- homeGoalsSim - awayGoalsSim
#Home
homeprob <- sum(goalDiffSim > 0) / nsim
print(homeprob)
#Draw
drawprob <- sum(goalDiffSim == 0) / nsim
print(drawprob)
#Away
awayprob <- sum(goalDiffSim < 0) / nsim
print(awayprob)
}
{
#load data
buli <- read.csv("C:\\Users\\nikla\\Documents\\DAMI Project\\RapidMiner Processes\\Comparison ML and Statistical\\buli.csv", header=TRUE)
#fit poisson model and get a summary
model <- glm(GoalsHome ~ GoalsAway + Home + Away, family=poisson(link=log), data=buli)
print(summary(model))
#probabilites of average goals scored
#Leverkusen
predictHome <- predict(model, data.frame(GoalsAway=1, Home="Bayer 04 Leverkusen", Away="Borussia Dortmund"), type="response")
print(predictHome)
#Ingolstadt
predictAway <- predict(model, data.frame(GoalsAway=0, Home="Borussia Dortmund", Away="Bayer 04 Leverkusen"), type="response")
print(predictAway)
#simulation with 10.000 possible results based on the probabilities
set.seed(915706074)
nsim <- 10000
homeGoalsSim <- rpois(nsim, predictHome)
awayGoalsSim <- rpois(nsim, predictAway)
goalDiffSim <- homeGoalsSim - awayGoalsSim
#Home
homeprob <- sum(goalDiffSim > 0) / nsim
print(homeprob)
#Draw
drawprob <- sum(goalDiffSim == 0) / nsim
print(drawprob)
#Away
awayprob <- sum(goalDiffSim < 0) / nsim
print(awayprob)
}
{
#load data
buli <- read.csv("C:\\Users\\nikla\\Documents\\DAMI Project\\RapidMiner Processes\\Comparison ML and Statistical\\buli.csv", header=TRUE)
#fit poisson model and get a summary
model <- glm(GoalsHome ~ GoalsAway + Home + Away, family=poisson(link=log), data=buli)
print(summary(model))
#probabilites of average goals scored
#Leverkusen
predictHome <- predict(model, data.frame(GoalsAway=1, Home="VfL Wolfsburg", Away="1. FSV Mainz 05"), type="response")
print(predictHome)
#Ingolstadt
predictAway <- predict(model, data.frame(GoalsAway=0, Home="1. FSV Mainz 05", Away="VfL Wolfsburg"), type="response")
print(predictAway)
#simulation with 10.000 possible results based on the probabilities
set.seed(915706074)
nsim <- 10000
homeGoalsSim <- rpois(nsim, predictHome)
awayGoalsSim <- rpois(nsim, predictAway)
goalDiffSim <- homeGoalsSim - awayGoalsSim
#Home
homeprob <- sum(goalDiffSim > 0) / nsim
print(homeprob)
#Draw
drawprob <- sum(goalDiffSim == 0) / nsim
print(drawprob)
#Away
awayprob <- sum(goalDiffSim < 0) / nsim
print(awayprob)
}
{
#load data
buli <- read.csv("C:\\Users\\nikla\\Documents\\DAMI Project\\RapidMiner Processes\\Comparison ML and Statistical\\buli.csv", header=TRUE)
#fit poisson model and get a summary
model <- glm(GoalsHome ~ GoalsAway + Home + Away, family=poisson(link=log), data=buli)
print(summary(model))
#probabilites of average goals scored
#Leverkusen
predictHome <- predict(model, data.frame(GoalsAway=1, Home="FC Schalke 04", Away="Borussia Mönchengladbach"), type="response")
print(predictHome)
#Ingolstadt
predictAway <- predict(model, data.frame(GoalsAway=0, Home="Borussia Mönchengladbach", Away="FC Schalke 04"), type="response")
print(predictAway)
#simulation with 10.000 possible results based on the probabilities
set.seed(915706074)
nsim <- 10000
homeGoalsSim <- rpois(nsim, predictHome)
awayGoalsSim <- rpois(nsim, predictAway)
goalDiffSim <- homeGoalsSim - awayGoalsSim
#Home
homeprob <- sum(goalDiffSim > 0) / nsim
print(homeprob)
#Draw
drawprob <- sum(goalDiffSim == 0) / nsim
print(drawprob)
#Away
awayprob <- sum(goalDiffSim < 0) / nsim
print(awayprob)
}
{
#load data
buli <- read.csv("C:\\Users\\nikla\\Documents\\DAMI Project\\RapidMiner Processes\\Comparison ML and Statistical\\buli.csv", header=TRUE)
#fit poisson model and get a summary
model <- glm(GoalsHome ~ GoalsAway + Home + Away, family=poisson(link=log), data=buli)
print(summary(model))
#probabilites of average goals scored
#Leverkusen
predictHome <- predict(model, data.frame(GoalsAway=1, Home="Borussia Dortmund", Away="Hertha BSC"), type="response")
print(predictHome)
#Ingolstadt
predictAway <- predict(model, data.frame(GoalsAway=0, Home="Hertha BSC", Away="Borussia Dortmund"), type="response")
print(predictAway)
#simulation with 10.000 possible results based on the probabilities
set.seed(915706074)
nsim <- 10000
homeGoalsSim <- rpois(nsim, predictHome)
awayGoalsSim <- rpois(nsim, predictAway)
goalDiffSim <- homeGoalsSim - awayGoalsSim
#Home
homeprob <- sum(goalDiffSim > 0) / nsim
print(homeprob)
#Draw
drawprob <- sum(goalDiffSim == 0) / nsim
print(drawprob)
#Away
awayprob <- sum(goalDiffSim < 0) / nsim
print(awayprob)
}
{
#load data
buli <- read.csv("C:\\Users\\nikla\\Documents\\DAMI Project\\RapidMiner Processes\\Comparison ML and Statistical\\buli.csv", header=TRUE)
#fit poisson model and get a summary
model <- glm(GoalsHome ~ GoalsAway + Home + Away, family=poisson(link=log), data=buli)
print(summary(model))
#probabilites of average goals scored
#Leverkusen
predictHome <- predict(model, data.frame(GoalsAway=1, Home="Borussia Mönchengladbach", Away="Hamburger SV"), type="response")
print(predictHome)
#Ingolstadt
predictAway <- predict(model, data.frame(GoalsAway=0, Home="Hamburger SV", Away="Borussia Mönchengladbach"), type="response")
print(predictAway)
#simulation with 10.000 possible results based on the probabilities
set.seed(915706074)
nsim <- 10000
homeGoalsSim <- rpois(nsim, predictHome)
awayGoalsSim <- rpois(nsim, predictAway)
goalDiffSim <- homeGoalsSim - awayGoalsSim
#Home
homeprob <- sum(goalDiffSim > 0) / nsim
print(homeprob)
#Draw
drawprob <- sum(goalDiffSim == 0) / nsim
print(drawprob)
#Away
awayprob <- sum(goalDiffSim < 0) / nsim
print(awayprob)
}
